import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.github.davidmc24.gradle.plugin.avro" version '1.2.0'
}

group = 'com.demo.kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven {
		url "http://packages.confluent.io/maven/"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
//	implementation group: 'io.confluent', name: 'kafka-schema-registry-client', version: '5.3.0'
	implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.2.1'
	implementation group: 'org.apache.avro', name: 'avro', version: '1.10.2'
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '6.1.0'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
	useJUnitPlatform()
}

//task generateAvro(type: GenerateAvro) {
//	//point plugin to folder with avro schemas
//	source("src/main/resources/avro")
//	//point plugin to folder with generated POJOs
//	outputDir = file("$buildDir/generated-main-resources-avro-java")
//
//}

avro {
	fieldVisibility = "PRIVATE"
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/avro")
	//outputDir = file("$buildDir/generated-main-resources-avro-java")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}

//compileJava.source(generateAvro.outputs)


